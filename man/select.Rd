% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/dplyr-select-S4methods.R
\docType{methods}
\name{select_all}
\alias{select_all}
\alias{select_at}
\alias{select_if}
\alias{select}
\alias{select_all,data.frame-method}
\alias{select_all,DataFrame-method}
\alias{select_at,data.frame-method}
\alias{select_at,DataFrame-method}
\alias{select_if,data.frame-method}
\alias{select_if,DataFrame-method}
\title{Select and rename a selection of variables}
\usage{
select_all(.tbl, ...)

select_at(.tbl, ...)

select_if(.tbl, ...)

\S4method{select_all}{data.frame}(.tbl, .funs = list(), ...)

\S4method{select_all}{DataFrame}(.tbl, .funs = list(), ...)

\S4method{select_at}{data.frame}(.tbl, .vars, .funs = list(), ...)

\S4method{select_at}{DataFrame}(.tbl, .vars, .funs = list(), ...)

\S4method{select_if}{data.frame}(.tbl, .predicate, .funs = list(), ...)

\S4method{select_if}{DataFrame}(.tbl, .predicate, .funs = list(), ...)
}
\arguments{
\item{.tbl}{A \code{tbl} object.}

\item{...}{Additional arguments for the function calls in
\code{.funs}. These are evaluated only once, with \link[rlang:tidy-dots]{tidy dots} support.}

\item{.funs}{A function \code{fun}, a purrr style lambda \code{~ fun(.)} or a list of either form.}

\item{.vars}{A list of columns generated by \code{\link[=vars]{vars()}},
a character vector of column names, a numeric vector of column
positions, or \code{NULL}.}

\item{.predicate}{A predicate function to be applied to the columns
or a logical vector. The variables for which \code{.predicate} is or
returns \code{TRUE} are selected. This argument is passed to
\code{\link[rlang:as_function]{rlang::as_function()}} and thus supports quosure-style lambda
functions and strings representing function names.}
}
\value{
Modified object.
}
\description{
These \link{scoped} variants of \code{\link[=select]{select()}} and \code{\link[=rename]{rename()}} operate on a
selection of variables. The semantics of these verbs have subtle
but important differences:
\itemize{
\item Selection drops variables that are not in the selection while
renaming retains them.
\item The renaming function is optional for selection but not for
renaming.
}

The \code{_if} and \code{_at} variants always retain grouping variables for grouped
data frames.
}
\note{
Updated 2019-08-15.
}
\section{\code{data.frame} methods}{


Since we are defining S4 methods in this package, we are providing
passthrough support to dplyr for \code{data.frame} class objects. Our generic
methods pass through to dplyr select functions, which are optimized for
\code{tbl_df} class.

Refer to \code{help(topic = "select_all", package = "dplyr")} for details.
}

\examples{
data(mtcars, package = "datasets")

## DataFrame ====
x <- as(mtcars, "DataFrame")
select_all(x, .funs = toupper)
select_at(x, .vars = c("mpg", "cyl"))
select_if(x, .predicate = is.double)
}
