% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutate-methods.R
\docType{methods}
\name{mutate}
\alias{mutate}
\alias{mutateAll}
\alias{mutateAt}
\alias{mutateIf}
\alias{transmuteAt}
\alias{transmuteIf}
\alias{mutateAll,DataFrame,function-method}
\alias{mutateAt,DataFrame,character,function-method}
\alias{mutateIf,DataFrame,function,function-method}
\alias{transmuteAt,DataFrame,character,function-method}
\alias{transmuteIf,DataFrame,function,function-method}
\title{Mutate multiple columns}
\usage{
mutateAll(object, fun, ...)

mutateAll(object, fun, ...)

mutateIf(object, predicate, fun, ...)

transmuteAt(object, vars, fun, ...)

transmuteIf(object, predicate, fun, ...)

\S4method{mutateAll}{DataFrame,`function`}(object, fun, ...)

\S4method{mutateAt}{DataFrame,character,`function`}(object, vars, fun, ...)

\S4method{mutateIf}{DataFrame,`function`,`function`}(object, predicate,
  fun, ...)

\S4method{transmuteAt}{DataFrame,character,`function`}(object, vars, fun,
  ...)

\S4method{transmuteIf}{DataFrame,`function`,`function`}(object, predicate,
  fun, ...)
}
\arguments{
\item{object}{Object.}

\item{fun}{\code{function}.
Mutation function.}

\item{...}{Passthrough arguments to function declared in \code{fun} argument.}

\item{vars}{\code{character}.
Column names.}

\item{predicate}{\code{function}.
A predicate function to be applied to the columns.
For example, \code{is.atomic()}.}
}
\value{
Modified object.
}
\description{
Mutate multiple columns
}
\note{
Updated 2019-09-02.
}
\examples{
data(mtcars, package = "datasets")

## DataFrame ====
x <- as(mtcars, "DataFrame")
mutateAll(x, fun = log, base = 2L)
mutateAt(x, vars = c("mpg", "cyl"), fun = log, base = 2L)
mutateIf(x, predicate = is.double, fun = as.integer)
transmuteAt(x, vars = c("mpg", "cyl"), fun = log, base = 2L)
transmuteIf(x, predicate = is.double, fun = as.integer)
}
\seealso{
These functions are inspired by dplyr. However, they are designed to only
work on \code{DataFrame} class, and use base R code internally.\preformatted{help(topic = "mutate_if", package = "dplyr")
}
}
