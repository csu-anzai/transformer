% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/dplyr-arrange-S4methods.R
\docType{methods}
\name{arrange_all}
\alias{arrange_all}
\alias{arrange_at}
\alias{arrange_if}
\alias{arrange}
\alias{arrange_all,data.frame-method}
\alias{arrange_all,DataFrame-method}
\alias{arrange_at,data.frame-method}
\alias{arrange_at,DataFrame-method}
\alias{arrange_if,data.frame-method}
\alias{arrange_if,DataFrame-method}
\title{Arrange rows by a selection of variables}
\usage{
arrange_all(.tbl, ...)

arrange_at(.tbl, ...)

arrange_if(.tbl, ...)

\S4method{arrange_all}{data.frame}(.tbl, .funs = list(), ...)

\S4method{arrange_all}{DataFrame}(.tbl, .funs = list(), ...)

\S4method{arrange_at}{data.frame}(.tbl, .vars, .funs = list(), ...)

\S4method{arrange_at}{DataFrame}(.tbl, .vars, .funs = list(), ...)

\S4method{arrange_if}{data.frame}(.tbl, .predicate, .funs = list(), ...)

\S4method{arrange_if}{DataFrame}(.tbl, .predicate, .funs = list(), ...)
}
\value{
Modified object, with rows variably sorted per column.
}
\description{
These \link{scoped} variants of \code{\link[=arrange]{arrange()}} sort a data frame by a
selection of variables. Like \code{\link[=arrange]{arrange()}}, you can modify the
variables before ordering with the \code{.funs} argument.
}
\note{
These functions will drop row names, intentionally.

Updated 2019-08-15.
}
\section{\code{data.frame} methods}{


Since we are defining S4 methods in this package, we are providing
passthrough support to dplyr for \code{data.frame} class objects. Our generic
methods pass through to dplyr arrange functions, which are optimized for
\code{tbl_df} class.

Refer to \code{help(topic = "arrange_all", package = "dplyr")} for details.
}

\examples{
data(mtcars, package = "datasets")

## DataFrame ====
x <- as(mtcars, "DataFrame")
print(x)
x \%>\% arrange_all(desc)
x \%>\% arrange_if(is.integer, desc)
x \%>\% arrange_at(c("mpg", "cyl"), desc)
}
