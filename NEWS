## transformer 0.1.6



## transformer 0.1.5 (2019-02-18)

### Major changes

- Added support for coercion to `data.table` class. `DataFrame` and `GRanges`
  class objects are initially supported.



## transformer 0.1.4 (2019-01-23)

### Minor changes

- Fix for `DataFrame` to `tbl_df` coercion that doesn't make names syntactically
  valid during internal `as.data.frame()` call.



## transformer 0.1.3 (2019-01-22)

### Major changes

- Migrated these functions to [brio][] package: `atomize()`, `factorize()`,
  `encode()`, `decode()`.



## transformer 0.1.2 (2019-01-20)

### Major changes

- Migrated `decode()` and `encode()` S4 methods from [basejump][].
- Improved `atomize()` compatibility with [Bioconductor][] 3.7 release. Now
  DataFrame objects containing Rle columns will get decoded consistently without
  applying stringsAsFactors in an unexpected fashion. This works correctly in
  Bioconductor 3.8 simply using `as.data.frame()` internally, but has unwanted
  coercion of `character` to `factor` columns for Rle-encoded data when using
  the Bioconductor 3.7 release.

### Minor changes

- Improved code coverage to 100%.



## transformer 0.1.1 (2019-01-14)

### Major changes

- Renamed package from S4Transformer to simply transformer.
- Migrated `atomize()` and `factorize()` from [basejump][].

### Minor changes

- Ensuring `tibble::as_tibble()` gets reexported.
- Now exporting `as.DataFrame()` S3 coercion methods, for consistency.
- Improved documentation for `as()` coercion methods.
- Improved [Travis CI][] and [AppVeyor][] CI build settings.



## transformer 0.1.0 (2019-01-06)

Initial release. Migrated useful S4 coercion methods from [basejump][] for
easier unit testing in a separate package.



[AppVeyor CI]: https://www.appveyor.com/
[basejump]: https://steinbaugh.com/basejump/
[brio]: https://steinbaugh.com/brio/
[Bioconductor]: https://bioconductor.org/
[Travis CI]: https://travis-ci.com/
